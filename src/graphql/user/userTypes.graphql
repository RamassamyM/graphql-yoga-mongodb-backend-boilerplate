type User {
  _id: ID
  firstname: String
  lastname: String
  email: String
  avatarColor: String
}

type AuthPayload {
  token: String!
  user: User
}

type Query {
  users: [User]
  user(_id: ID!): User
  me: User
}

type Confirmation {
  confirmed: Boolean
  user: User
}

type Mutation {
  captureEmail(email: String!): User
  signup(_id: ID!, firstname: String!, lastname: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  editUser(_id: ID!, firstname: String, lastname: String): User
  deleteUserWithPassword(_id: ID!, password: String!): Confirmation
  deleteUser(_id: ID!): User
}
